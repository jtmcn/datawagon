name: Build

on:
    push:
      branches: [main]
    pull_request:
      branches: [main]

defaults:
  run:
    shell: bash

jobs:
  black-formatting-check:
    name: Check formatting
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: psf/black@stable
  
  flake8-linting:
    name: Linting
    runs-on: 'ubuntu-latest'
    needs: black-formatting-check    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: py-actions/flake8@v2

  build:
    name: Build tool
    runs-on: ${{ matrix.os }}
    needs: flake8-linting
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
          - 'macos-latest'
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
          cache: 'poetry'
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
      - name: Get Poetry version
        run: poetry --version
      - name: Check pyproject.toml validity
        run: poetry check --no-interaction
      - name: Install deps
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --without dev
      - name: Run tests
        run: poetry run pytest -v
      - name: Build artifacts
        run: poetry build -v